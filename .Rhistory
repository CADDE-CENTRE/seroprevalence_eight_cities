source('D:/Documents/Github/seroprevalence_eight_cities/mortality_rate.R')
ggplot(sragn %>% filter(DT_SIN_PRI <= as.Date("2021-03-31")), aes(x = DT_SIN_PRI, y = 1E6*SMR, colour = ID_MN_RESI)) + facet_wrap(~ID_MN_RESI, nrow = 2, ncol = 4) +
geom_point(alpha = 0.25, size = 1) + geom_line(aes(y = 1E6*SMR_mean)) + theme_bw() +
labs(x = "Date of symptoms onset", y = "Age-sex adjusted daily mortality per million inhabitants") +
theme(legend.position = "none") + scale_x_continuous(breaks = seq(as.Date("2020-01-01"), as.Date("2021-03-01"), by = "month"),
labels = c("Jan", "Fev", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec",
"Jan", "Fev", "Mar")) +
ylim(c(0, 90)) + geom_line(aes(x = DT_SIN_PRI, y = 3E4*SMR_cum), linetype = 2) +
scale_y_continuous("Age-sex adjusted mortality per million inhabitants",
sec.axis = sec_axis(~ . * 100/3, name = "Cumulative age-sex adjusted mortality per million inhabitants"))
ggplot(sragn %>% filter(DT_SIN_PRI <= as.Date("2021-03-31")), aes(x = DT_SIN_PRI, y = 1E6*SMR, colour = ID_MN_RESI)) + facet_wrap(~ID_MN_RESI, nrow = 2, ncol = 4) +
geom_point(alpha = 0.25, size = 1) + geom_line(aes(y = 1E6*SMR_mean)) + theme_bw() +
labs(x = "Date of symptoms onset", y = "Age-sex adjusted daily mortality per million inhabitants") +
theme(legend.position = "none") + scale_x_continuous(breaks = seq(as.Date("2020-01-01"), as.Date("2021-03-01"), by = "month"),
labels = c("Jan", "Fev", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec",
"Jan", "Fev", "Mar")) +
ylim(c(0, 90)) + geom_line(aes(x = DT_SIN_PRI, y = 1E6*MR_mean), linetype = 2)
ggplot(sragn %>% filter(DT_SIN_PRI <= as.Date("2021-03-31")), aes(x = DT_SIN_PRI, y = 1E6*SMR, colour = ID_MN_RESI)) + facet_wrap(~ID_MN_RESI, nrow = 2, ncol = 4) +
geom_point(alpha = 0.25, size = 1) + geom_line(aes(y = 1E6*SMR_mean)) + theme_bw() +
labs(x = "Date of symptoms onset", y = "Age-sex adjusted daily mortality per million inhabitants") +
theme(legend.position = "none") + scale_x_continuous(breaks = seq(as.Date("2020-01-01"), as.Date("2021-03-01"), by = "month"),
labels = c("Jan", "Fev", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec",
"Jan", "Fev", "Mar")) +
ylim(c(0, 90)) + geom_line(aes(x = DT_SIN_PRI, y = 1E6*MR_mean), linetype = 2)
ggplot(sragn %>% filter(DT_SIN_PRI <= as.Date("2021-03-31")), aes(x = DT_SIN_PRI, y = 1E6*SMR, colour = ID_MN_RESI)) + facet_wrap(~ID_MN_RESI, nrow = 2, ncol = 4) +
geom_point(alpha = 0.25, size = 1) + geom_line(aes(y = 1E6*SMR_mean)) + theme_bw() +
labs(x = "Date of symptoms onset", y = "Age-sex adjusted daily mortality per million inhabitants") +
theme(legend.position = "none") + scale_x_continuous(breaks = seq(as.Date("2020-01-01"), as.Date("2021-03-01"), by = "month"),
labels = c("Jan", "Fev", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec",
"Jan", "Fev", "Mar")) +
ylim(c(0, 90)) + geom_line(aes(x = DT_SIN_PRI, y = 1E6*MR_mean), linetype = 2)
ggsave(last_plot(), file = "figs/age-standardised_MR.png", width= 10, height = 10)
citymap <- c("BELO HORIZONTE" = "Belo Horizonte", "CURITIBA" = "Curitiba", "FORTALEZA" = "Fortaleza", "MANAUS" = "Manaus", "RECIFE" = "Recife",
"RIO DE JANEIRO" = "Rio de Janeiro", "SALVADOR" = "Salvador", "SAO PAULO" = "SÃ£o Paulo")
ggsave(last_plot(), file = "figs/age-standardised_MR.png", width= 15, height = 10)
source('D:/Documents/Github/seroprevalence_eight_cities/measured_plots.R')
source('D:/Documents/Github/seroprevalence_eight_cities/estimate_ppos.R')
library(tidyverse)
library(lubridate)
library(rstudioapi)
library(zoo)
setwd(dirname(getActiveDocumentContext()$path))
source("repeat_functions.R")
#This script estimates p+[n] from repeat blood donors and convalescent plasma donors data
df <- read.csv("data/repeat_blood_donors.csv")
df
df <- read.csv2("data/repeat_blood_donors.csv")
df
names(df)
df <- df %>% filter(donproc == "WB") %>% select(donorid, sampleid, sex, age, donyr, donmo, donda, assay, covid_result, covid_interpretation)
df
write.csv(df, file = "data/repeat_blood_donors.csv")
source('D:/Documents/Github/seroprevalence_eight_cities/estimate_ppos.R')
source('D:/Documents/Github/seroprevalence_eight_cities/estimate_ppos.R')
source('D:/Documents/Github/seroprevalence_eight_cities/estimate_ppos.R')
source('D:/Documents/Github/seroprevalence_eight_cities/estimate_ppos.R')
source("prev_functions.R")
source('D:/Documents/Github/seroprevalence_eight_cities/main_seroreversion.R')
pop <- readRDS("data/population2020_eightcities.rds") %>% filter(code == city_code) %>% select(-code) %>% arrange(age_sex)
readRDS("data/population2020_eightcities.rds")
ppos_df <- read.csv("data/ppos_week.csv")
source('D:/Documents/Github/seroprevalence_eight_cities/main_seroreversion.R')
ppos_df <- read.csv("data/ppos_week.csv")
Nsamples_val <- 10
for(center in c("HEMOAM", "FPS", "HEMOCE", "HEMEPAR", "HEMORIO", "HEMOBA", "HEMOPE", "HEMOMINAS")) {
print(center)
ppos <- ppos_df %>% filter(type == "Repeat Donors") %>% arrange(date) %>% .$ppos
BSC_prev_val(center, ppos, paste0(center, "_repeat_week_agesex"), Nsamples_val, 0.49, TRUE)
}
library('nimble')
library("rstudioapi")
library(tidyverse)
library(lubridate)
library(rstudioapi)
library(reshape2)
library(Hmisc)
setwd(dirname(getActiveDocumentContext()$path))
source("serorev_functions.R")
source("IFR_functions.R")
source("serorev_functions.R")
source("IFR_functions.R")
source('D:/Documents/Github/seroprevalence_eight_cities/main_seroreversion.R')
warnings()
source('D:/Documents/Github/seroprevalence_eight_cities/measured_IFR.R')
source('D:/Documents/Github/seroprevalence_eight_cities/measured_IFR.R')
source('D:/Documents/Github/seroprevalence_eight_cities/measured_IFR.R')
source('D:/Documents/Github/seroprevalence_eight_cities/repeatdonors_comparison.R')
source('D:/Documents/Github/seroprevalence_eight_cities/repeatdonors_comparison.R')
source('D:/Documents/Github/seroprevalence_eight_cities/repeatdonors_comparison.R')
51
all_centres <- readRDS("data/Bloodbank.rds")
all_centres$month
all_centres$month %>% min()
all_centres
all_centres %>% group_by(month)
all_centres %>% group_by(blood_center, month) %>% tally()
all_centres %>% group_by(blood_center, month) %>% tally()
dates <- seq(as.Date("2020-01-01"), as.Date("2021-04-08"), by = "week")
all_centres$month = cut(all_centres$donation_date, dates, label = 1:(length(dates)-1)) %>% as.numeric() #We keep the name month,
all_centres %>% group_by(blood_center, month) %>% tally()
all_centres %>% group_by(blood_center, month) %>% tally() %>% arrange(blood_center)
all_centres %>% group_by(blood_center, month) %>% tally() %>% arrange(blood_center, month)
all_centres %>% filter(month <= 11) %>% group_by(blood_center, month) %>% tally()
all_centres %>% filter(month == 10) %>% group_by(blood_center, month) %>% tally()
